[{"/Users/luiseduardo/Documents/repositories/my-github/miles-calculator/client/src/index.tsx":"1","/Users/luiseduardo/Documents/repositories/my-github/miles-calculator/client/src/reportWebVitals.ts":"2","/Users/luiseduardo/Documents/repositories/my-github/miles-calculator/client/src/App.tsx":"3","/Users/luiseduardo/Documents/repositories/my-github/miles-calculator/client/src/pages/home/index.tsx":"4","/Users/luiseduardo/Documents/repositories/my-github/miles-calculator/client/src/components/errorBoundary/index.tsx":"5","/Users/luiseduardo/Documents/repositories/my-github/miles-calculator/client/src/components/header/index.tsx":"6","/Users/luiseduardo/Documents/repositories/my-github/miles-calculator/client/src/components/header/styles.ts":"7","/Users/luiseduardo/Documents/repositories/my-github/miles-calculator/client/src/styles.ts":"8","/Users/luiseduardo/Documents/repositories/my-github/miles-calculator/client/src/pages/home/styles.ts":"9","/Users/luiseduardo/Documents/repositories/my-github/miles-calculator/client/src/components/dropdown/index.tsx":"10","/Users/luiseduardo/Documents/repositories/my-github/miles-calculator/client/src/components/dropdown/style.ts":"11","/Users/luiseduardo/Documents/repositories/my-github/miles-calculator/client/src/components/inputForm/index.tsx":"12","/Users/luiseduardo/Documents/repositories/my-github/miles-calculator/client/src/components/inputForm/styles.ts":"13","/Users/luiseduardo/Documents/repositories/my-github/miles-calculator/client/src/api/cities.ts":"14","/Users/luiseduardo/Documents/repositories/my-github/miles-calculator/client/src/contexts/home.tsx":"15","/Users/luiseduardo/Documents/repositories/my-github/miles-calculator/client/src/pages/results/index.tsx":"16","/Users/luiseduardo/Documents/repositories/my-github/miles-calculator/client/src/pages/results/styles.ts":"17"},{"size":554,"mtime":1667943136953,"results":"18","hashOfConfig":"19"},{"size":425,"mtime":1667943136953,"results":"20","hashOfConfig":"19"},{"size":1204,"mtime":1668424395670,"results":"21","hashOfConfig":"19"},{"size":10697,"mtime":1668476117899,"results":"22","hashOfConfig":"19"},{"size":647,"mtime":1667946200961,"results":"23","hashOfConfig":"19"},{"size":242,"mtime":1667946457374,"results":"24","hashOfConfig":"19"},{"size":435,"mtime":1667947224477,"results":"25","hashOfConfig":"19"},{"size":448,"mtime":1668033385861,"results":"26","hashOfConfig":"19"},{"size":1796,"mtime":1668365218308,"results":"27","hashOfConfig":"19"},{"size":2646,"mtime":1668379089815,"results":"28","hashOfConfig":"19"},{"size":1057,"mtime":1668283210753,"results":"29","hashOfConfig":"19"},{"size":2586,"mtime":1668384850619,"results":"30","hashOfConfig":"19"},{"size":1287,"mtime":1668382693261,"results":"31","hashOfConfig":"19"},{"size":1021,"mtime":1668481162936,"results":"32","hashOfConfig":"19"},{"size":1458,"mtime":1668475536989,"results":"33","hashOfConfig":"19"},{"size":4614,"mtime":1668475097648,"results":"34","hashOfConfig":"19"},{"size":2202,"mtime":1668475130139,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},"1gwmdl1",{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86"},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/luiseduardo/Documents/repositories/my-github/miles-calculator/client/src/index.tsx",[],[],[],"/Users/luiseduardo/Documents/repositories/my-github/miles-calculator/client/src/reportWebVitals.ts",[],[],"/Users/luiseduardo/Documents/repositories/my-github/miles-calculator/client/src/App.tsx",[],[],"/Users/luiseduardo/Documents/repositories/my-github/miles-calculator/client/src/pages/home/index.tsx",["90","91","92"],[],"import React from 'react'\nimport {\n  FaMapMarkerAlt,\n  FaCalendarDay,\n  FaMale,\n  FaPlus,\n  FaTrash,\n} from 'react-icons/fa'\nimport { format, isFuture } from 'date-fns'\nimport { parseUrl } from 'query-string'\n\nimport { InputForm } from '../../components/inputForm'\nimport { IIntermediateCity, SearchFormContext } from '../../contexts/home'\nimport {\n  AddButton,\n  AddButtonContainer,\n  CardBody,\n  CardContainer,\n  CardForm,\n  CardFormInputs,\n  CardHeader,\n  CardTitle,\n  IntermediateCityContainer,\n  MoreInputContainer,\n  RemoveButton,\n  SearchButton,\n  SectionSearch,\n} from './styles'\nimport { useNavigate } from 'react-router-dom'\n\nexport const Home: React.FC = () => {\n  const [extraFields, setExtraFields] = React.useState<Array<number>>([])\n  const [extraFieldLastId, setExtraFieldLastId] = React.useState<number>(1)\n  const [canSubmitForm, setCanSubmitForm] = React.useState<boolean>(true)\n\n  const formContext = React.useContext(SearchFormContext)\n\n  const queryParams = parseUrl(window.location.search)\n  const navigate = useNavigate()\n\n  const handleAddNewFormField = (): void => {\n    setExtraFields([...extraFields, extraFieldLastId])\n\n    const newIntermediateCities =\n      formContext?.searchForm.intermediateCities.set(extraFieldLastId, {\n        value: '',\n        errorMessage: '',\n      })\n\n    formContext?.setSearchForm({\n      ...formContext.searchForm,\n      intermediateCities: newIntermediateCities,\n    })\n    setExtraFieldLastId((id) => ++id)\n  }\n\n  const handleFormDataChange = ({\n    keyForm,\n    extraFieldId,\n    value,\n  }: {\n    keyForm: string\n    extraFieldId?: number\n    value: string\n  }): void => {\n    setCanSubmitForm(true)\n    if (keyForm !== 'intermediateCities') {\n      formContext.setSearchForm({\n        ...formContext.searchForm,\n        [keyForm]: value,\n        [keyForm + 'ErrorMessage']: '',\n      })\n    } else if (extraFieldId) {\n      const newIntermediateCities =\n        formContext.searchForm.intermediateCities.set(extraFieldId, {\n          value: value,\n          errorMessage: '',\n        })\n      formContext.setSearchForm({\n        ...formContext.searchForm,\n        intermediateCities: newIntermediateCities,\n      })\n    }\n  }\n\n  const handleRemoveExtraField = (extraFieldId: number) => {\n    const tempExtraFields = [...extraFields]\n    tempExtraFields.splice(extraFields.indexOf(extraFieldId), 1)\n    setExtraFields(tempExtraFields)\n\n    formContext.searchForm.intermediateCities.delete(extraFieldId)\n  }\n\n  const validateFields = (): boolean => {\n    let hasError = false\n\n    if (\n      /\\d/.test(formContext.searchForm.origin) ||\n      !formContext.searchForm.origin\n    ) {\n      hasError = true\n\n      formContext.setSearchForm({\n        ...formContext.searchForm,\n        originErrorMessage: 'Select a city name from the list.',\n      })\n    }\n\n    if (\n      /\\d/.test(formContext.searchForm.destination) ||\n      !formContext.searchForm.destination\n    ) {\n      hasError = true\n\n      formContext.setSearchForm({\n        ...formContext.searchForm,\n        destinationErrorMessage: 'Select a city name from the list.',\n      })\n    }\n\n    if (\n      !formContext.searchForm.date ||\n      !isFuture(new Date(formContext.searchForm.date))\n    ) {\n      hasError = true\n\n      formContext.setSearchForm({\n        ...formContext.searchForm,\n        dateErrorMessage: 'Select a date in the future.',\n      })\n    }\n\n    if (\n      !formContext.searchForm.passengers ||\n      formContext.searchForm.passengers < 1\n    ) {\n      hasError = true\n\n      formContext.setSearchForm({\n        ...formContext.searchForm,\n        passengersErrorMessage: 'Inform the quantity of people.',\n      })\n    }\n\n    formContext.searchForm.intermediateCities.forEach((city, key) => {\n      if (!city.value || /\\d/.test(city.value)) {\n        const newIntermediateCities =\n          formContext.searchForm.intermediateCities.set(key, {\n            value: city.value,\n            errorMessage: 'Select a city name from the list.',\n          })\n        formContext.setSearchForm({\n          ...formContext.searchForm,\n          intermediateCities: newIntermediateCities,\n        })\n      }\n    })\n\n    if (hasError) setCanSubmitForm(false)\n    return hasError\n  }\n\n  const handleFormSubmit = () => {\n    if (!validateFields()) {\n      let intermediateCitiesSearch = ''\n      formContext.searchForm.intermediateCities?.forEach((city) => {\n        intermediateCitiesSearch += `&intermediateCities=${city.value}`\n      })\n\n      navigate({\n        pathname: '/results',\n        search: `?origin=${formContext.searchForm.origin}&destination=${\n          formContext.searchForm.destination\n        }&date=${\n          formContext.searchForm.date &&\n          format(new Date(formContext.searchForm.date), 'yyyy-MM-dd')\n        }&passengers=${\n          formContext.searchForm.passengers\n        }${intermediateCitiesSearch}`,\n      })\n    }\n  }\n\n  const setContextFromURL = () => {\n    const intermediateCitiesSearch = queryParams.query.intermediateCities\n\n    let intermediateCities: Array<string> = []\n    if (intermediateCitiesSearch?.length) {\n      intermediateCities = JSON.stringify(intermediateCitiesSearch)\n        .replace(/[\\[\\]\\\"']+/g, '')\n        .split(',')\n    }\n\n    const newIntermediateCitiesSet: Map<number, IIntermediateCity> = new Map()\n    const fieldArray = []\n    for (let idx = 0; idx < intermediateCities.length; idx++) {\n      newIntermediateCitiesSet.set(idx, {\n        value: intermediateCities[idx],\n        errorMessage: '',\n      })\n      fieldArray.push(idx)\n    }\n    setExtraFields(fieldArray)\n    setExtraFieldLastId(intermediateCities.length)\n\n    formContext.setSearchForm({\n      ...formContext.searchForm,\n      origin: queryParams.query.origin?.toString() || '',\n      destination: queryParams.query.destination?.toString() || '',\n      date: queryParams.query.date?.toString() || '',\n      passengers: Number(queryParams.query.passengers) || 0,\n      intermediateCities: newIntermediateCitiesSet,\n    })\n  }\n\n  React.useEffect(() => {\n    setContextFromURL()\n  }, [])\n\n  return (\n    <SectionSearch>\n      <CardContainer>\n        <CardHeader>\n          <CardTitle>Trip</CardTitle>\n        </CardHeader>\n        <CardBody>\n          <CardForm>\n            <CardFormInputs>\n              <InputForm\n                type='text'\n                name='origin'\n                label='City of origin'\n                icon={<FaMapMarkerAlt size={24} />}\n                value={formContext.searchForm.origin}\n                onChangeFunc={(e: React.ChangeEvent<HTMLInputElement>) =>\n                  handleFormDataChange({\n                    keyForm: 'origin',\n                    value: e.target.value,\n                  })\n                }\n                dropdownType='cities'\n                errorMessage={formContext.searchForm.originErrorMessage}\n              />\n\n              <InputForm\n                type='text'\n                name='destination'\n                label='City of destination'\n                icon={<FaMapMarkerAlt size={24} />}\n                value={formContext.searchForm.destination}\n                onChangeFunc={(e: React.ChangeEvent<HTMLInputElement>) =>\n                  handleFormDataChange({\n                    keyForm: 'destination',\n                    value: e.target.value,\n                  })\n                }\n                dropdownType='cities'\n                errorMessage={formContext.searchForm.destinationErrorMessage}\n              />\n\n              <InputForm\n                type='text'\n                name='date'\n                label='Date of the trip'\n                icon={<FaCalendarDay size={24} />}\n                value={\n                  formContext.searchForm.date &&\n                  format(new Date(formContext.searchForm.date), 'yyyy-MM-dd')\n                }\n                onChangeFunc={(e: React.ChangeEvent<HTMLInputElement>) =>\n                  handleFormDataChange({\n                    keyForm: 'date',\n                    value: e.target.value,\n                  })\n                }\n                dropdownType='date'\n                errorMessage={formContext.searchForm.dateErrorMessage}\n              />\n\n              <InputForm\n                type='number'\n                name='passengers'\n                label='Number of passengers'\n                icon={<FaMale size={24} />}\n                value={formContext.searchForm.passengers}\n                onChangeFunc={(e: React.ChangeEvent<HTMLInputElement>) =>\n                  handleFormDataChange({\n                    keyForm: 'passengers',\n                    value: e.target.value,\n                  })\n                }\n                errorMessage={formContext.searchForm.passengersErrorMessage}\n              />\n            </CardFormInputs>\n\n            <MoreInputContainer>\n              {extraFields.map((field) => (\n                <IntermediateCityContainer key={field}>\n                  <InputForm\n                    type='text'\n                    name={`intermediateCities-${field}`}\n                    label='Intermediate city'\n                    icon={<FaMapMarkerAlt size={24} />}\n                    value={\n                      formContext.searchForm.intermediateCities.get(field)\n                        ?.value\n                    }\n                    onChangeFunc={(e: React.ChangeEvent<HTMLInputElement>) =>\n                      handleFormDataChange({\n                        keyForm: 'intermediateCities',\n                        extraFieldId: field,\n                        value: e.target.value,\n                      })\n                    }\n                    dropdownType='cities'\n                    errorMessage={\n                      formContext.searchForm.intermediateCities.get(field)\n                        ?.errorMessage || ''\n                    }\n                  />\n\n                  <RemoveButton\n                    type='button'\n                    onClick={() => handleRemoveExtraField(field)}\n                  >\n                    <FaTrash size={18} />\n                  </RemoveButton>\n                </IntermediateCityContainer>\n              ))}\n            </MoreInputContainer>\n\n            <AddButtonContainer>\n              <AddButton type='button' onClick={handleAddNewFormField}>\n                <FaPlus size={12} />\n                Add intermediate city\n              </AddButton>\n            </AddButtonContainer>\n            <SearchButton\n              type='button'\n              disabled={!canSubmitForm}\n              onClick={handleFormSubmit}\n            >\n              Search\n            </SearchButton>\n          </CardForm>\n        </CardBody>\n      </CardContainer>\n    </SectionSearch>\n  )\n}\n","/Users/luiseduardo/Documents/repositories/my-github/miles-calculator/client/src/components/errorBoundary/index.tsx",[],[],"/Users/luiseduardo/Documents/repositories/my-github/miles-calculator/client/src/components/header/index.tsx",[],[],"/Users/luiseduardo/Documents/repositories/my-github/miles-calculator/client/src/components/header/styles.ts",[],[],"/Users/luiseduardo/Documents/repositories/my-github/miles-calculator/client/src/styles.ts",[],[],"/Users/luiseduardo/Documents/repositories/my-github/miles-calculator/client/src/pages/home/styles.ts",[],[],"/Users/luiseduardo/Documents/repositories/my-github/miles-calculator/client/src/components/dropdown/index.tsx",[],[],"/Users/luiseduardo/Documents/repositories/my-github/miles-calculator/client/src/components/dropdown/style.ts",[],[],"/Users/luiseduardo/Documents/repositories/my-github/miles-calculator/client/src/components/inputForm/index.tsx",[],[],"/Users/luiseduardo/Documents/repositories/my-github/miles-calculator/client/src/components/inputForm/styles.ts",[],[],"/Users/luiseduardo/Documents/repositories/my-github/miles-calculator/client/src/api/cities.ts",[],[],"/Users/luiseduardo/Documents/repositories/my-github/miles-calculator/client/src/contexts/home.tsx",[],[],"/Users/luiseduardo/Documents/repositories/my-github/miles-calculator/client/src/pages/results/index.tsx",["93","94"],[],"import React from 'react'\nimport { FaExclamationTriangle, FaCalculator } from 'react-icons/fa'\nimport { parseUrl } from 'query-string'\n\nimport {\n  CalculationCityName,\n  CalculationItem,\n  CalculationKilometers,\n  CalculationResultsContainer,\n  CenterInfo,\n  CenterInfoItem,\n  CenterInfoTitle,\n  EmptyInfoMessage,\n  EmptyInfoMessageContainer,\n  GoBackToSearchButton,\n  InfoItemTitle,\n  InfoItemValue,\n  ResultsPageContainer,\n  SearchInfoContainer,\n  TopRightCornerInfo,\n  TopRightCornerItem,\n} from './styles'\nimport { useNavigate } from 'react-router-dom'\nimport { useQuery } from 'react-query'\nimport { getKilometers, IKilometersResponse } from '../../api/cities'\n\nexport const ResultsPage: React.FC = () => {\n  const queryParams = parseUrl(window.location.search)\n  const navigate = useNavigate()\n\n  const origin = queryParams.query.origin?.toString() || '',\n    destination = queryParams.query.destination?.toString() || '',\n    date = queryParams.query.date?.toString() || '',\n    passengers = Number(queryParams.query.passengers) || 0,\n    intermediateCitiesSearch = queryParams.query.intermediateCities\n\n  let intermediateCities: Array<string> = []\n  if (intermediateCitiesSearch?.length) {\n    intermediateCities = JSON.stringify(intermediateCitiesSearch)\n      .replace(/[\\[\\]\\\"']+/g, '')\n      .split(',')\n  }\n\n  const requestSearch = [origin, ...intermediateCities, destination]\n  const { isError, isSuccess, isLoading, data } = useQuery<\n    IKilometersResponse[],\n    Error\n  >(['kilometers', requestSearch], () => getKilometers(requestSearch))\n\n  if (!origin || !destination || !date || !passengers) {\n    return (\n      <ResultsPageContainer>\n        <SearchInfoContainer>\n          <EmptyInfoMessageContainer>\n            <FaExclamationTriangle size={42} />\n            <EmptyInfoMessage>\n              Looks like we don't have the information necessary for the\n              calculation.\n            </EmptyInfoMessage>\n          </EmptyInfoMessageContainer>\n          <GoBackToSearchButton onClick={() => navigate('/')}>\n            Go Back to search\n          </GoBackToSearchButton>\n        </SearchInfoContainer>\n      </ResultsPageContainer>\n    )\n  }\n\n  return (\n    <ResultsPageContainer>\n      <SearchInfoContainer>\n        <TopRightCornerInfo>\n          <TopRightCornerItem>\n            <InfoItemTitle>Date</InfoItemTitle>\n            <InfoItemValue>{date}</InfoItemValue>\n          </TopRightCornerItem>\n          <TopRightCornerItem>\n            <InfoItemTitle>Passengers</InfoItemTitle>\n            <InfoItemValue>{passengers}</InfoItemValue>\n          </TopRightCornerItem>\n        </TopRightCornerInfo>\n\n        <CenterInfoTitle>Route</CenterInfoTitle>\n\n        <CenterInfo>\n          <CenterInfoItem>\n            <InfoItemTitle>Origin</InfoItemTitle>\n            <InfoItemValue>{origin}</InfoItemValue>\n          </CenterInfoItem>\n\n          {intermediateCities.length\n            ? intermediateCities.map((city: string, idx) => (\n                <CenterInfoItem key={idx}>\n                  <InfoItemTitle>Intermediate City</InfoItemTitle>\n                  <InfoItemValue>{city}</InfoItemValue>\n                </CenterInfoItem>\n              ))\n            : null}\n\n          <CenterInfoItem>\n            <InfoItemTitle>Destination</InfoItemTitle>\n            <InfoItemValue>{destination}</InfoItemValue>\n          </CenterInfoItem>\n        </CenterInfo>\n      </SearchInfoContainer>\n\n      <CalculationResultsContainer>\n        {isLoading ? (\n          <EmptyInfoMessageContainer>\n            <FaCalculator size={42} />\n            <EmptyInfoMessage>Calculating...</EmptyInfoMessage>\n          </EmptyInfoMessageContainer>\n        ) : !isError && isSuccess ? (\n          data?.map(({ id, origin, destiny, kilometers }) => {\n            return (\n              <CalculationItem key={id}>\n                <CalculationCityName>{origin}</CalculationCityName>\n                <CalculationKilometers>\n                  {' '}\n                  -- {kilometers} km --\n                </CalculationKilometers>\n                <CalculationCityName>{destiny}</CalculationCityName>\n              </CalculationItem>\n            )\n          })\n        ) : (\n          <EmptyInfoMessageContainer>\n            <FaExclamationTriangle size={42} />\n            <EmptyInfoMessage>\n              A error occurred in the calculation.\n            </EmptyInfoMessage>\n          </EmptyInfoMessageContainer>\n        )}\n\n        <GoBackToSearchButton onClick={() => navigate('/')}>\n          New Search\n        </GoBackToSearchButton>\n      </CalculationResultsContainer>\n    </ResultsPageContainer>\n  )\n}\n","/Users/luiseduardo/Documents/repositories/my-github/miles-calculator/client/src/pages/results/styles.ts",[],[],{"ruleId":"95","severity":1,"message":"96","line":190,"column":20,"nodeType":"97","messageId":"98","endLine":190,"endColumn":21,"suggestions":"99"},{"ruleId":"95","severity":1,"message":"100","line":190,"column":24,"nodeType":"97","messageId":"98","endLine":190,"endColumn":25,"suggestions":"101"},{"ruleId":"102","severity":1,"message":"103","line":218,"column":6,"nodeType":"104","endLine":218,"endColumn":8,"suggestions":"105"},{"ruleId":"95","severity":1,"message":"96","line":40,"column":18,"nodeType":"97","messageId":"98","endLine":40,"endColumn":19,"suggestions":"106"},{"ruleId":"95","severity":1,"message":"100","line":40,"column":22,"nodeType":"97","messageId":"98","endLine":40,"endColumn":23,"suggestions":"107"},"no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["108","109"],"Unnecessary escape character: \\\".",["110","111"],"react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'setContextFromURL'. Either include it or remove the dependency array.","ArrayExpression",["112"],["113","114"],["115","116"],{"messageId":"117","fix":"118","desc":"119"},{"messageId":"120","fix":"121","desc":"122"},{"messageId":"117","fix":"123","desc":"119"},{"messageId":"120","fix":"124","desc":"122"},{"desc":"125","fix":"126"},{"messageId":"117","fix":"127","desc":"119"},{"messageId":"120","fix":"128","desc":"122"},{"messageId":"117","fix":"129","desc":"119"},{"messageId":"120","fix":"130","desc":"122"},"removeEscape",{"range":"131","text":"132"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"133","text":"134"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"135","text":"132"},{"range":"136","text":"134"},"Update the dependencies array to be: [setContextFromURL]",{"range":"137","text":"138"},{"range":"139","text":"132"},{"range":"140","text":"134"},{"range":"141","text":"132"},{"range":"142","text":"134"},[5180,5181],"",[5180,5180],"\\",[5184,5185],[5184,5184],[6051,6053],"[setContextFromURL]",[1281,1282],[1281,1281],[1285,1286],[1285,1285]]