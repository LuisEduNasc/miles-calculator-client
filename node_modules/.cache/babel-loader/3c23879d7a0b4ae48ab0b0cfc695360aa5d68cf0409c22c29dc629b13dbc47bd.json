{"ast":null,"code":"var _jsxFileName = \"/Users/luiseduardo/Documents/repositories/my-github/miles-calculator/client/src/pages/home/index.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { FaMapMarkerAlt, FaCalendarDay, FaMale, FaPlus, FaTrash } from 'react-icons/fa';\nimport { format, isFuture } from 'date-fns';\nimport { parseUrl } from 'query-string';\nimport { InputForm } from '../../components/inputForm';\nimport { SearchFormContext } from '../../contexts/home';\nimport { AddButton, AddButtonContainer, CardBody, CardContainer, CardForm, CardFormInputs, CardHeader, CardTitle, IntermediateCityContainer, MoreInputContainer, RemoveButton, SearchButton, SectionSearch } from './styles';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Home = () => {\n  _s();\n  const [extraFields, setExtraFields] = React.useState([]);\n  const [extraFieldLastId, setExtraFieldLastId] = React.useState(1);\n  const [canSubmitForm, setCanSubmitForm] = React.useState(true);\n  const formContext = React.useContext(SearchFormContext);\n  const queryParams = parseUrl(window.location.search);\n  const navigate = useNavigate();\n  const handleAddNewFormField = () => {\n    setExtraFields([...extraFields, extraFieldLastId]);\n    const newIntermediateCities = formContext === null || formContext === void 0 ? void 0 : formContext.searchForm.intermediateCities.set(extraFieldLastId, {\n      value: '',\n      errorMessage: ''\n    });\n    formContext === null || formContext === void 0 ? void 0 : formContext.setSearchForm({\n      ...formContext.searchForm,\n      intermediateCities: newIntermediateCities\n    });\n    setExtraFieldLastId(id => ++id);\n  };\n  const handleFormDataChange = _ref => {\n    let {\n      keyForm,\n      extraFieldId,\n      value\n    } = _ref;\n    setCanSubmitForm(true);\n    if (keyForm !== 'intermediateCities') {\n      formContext.setSearchForm({\n        ...formContext.searchForm,\n        [keyForm]: value,\n        [keyForm + 'ErrorMessage']: ''\n      });\n    } else if (extraFieldId) {\n      const newIntermediateCities = formContext.searchForm.intermediateCities.set(extraFieldId, {\n        value: value,\n        errorMessage: ''\n      });\n      formContext.setSearchForm({\n        ...formContext.searchForm,\n        intermediateCities: newIntermediateCities\n      });\n    }\n  };\n  const handleRemoveExtraField = extraFieldId => {\n    const tempExtraFields = [...extraFields];\n    tempExtraFields.splice(extraFields.indexOf(extraFieldId), 1);\n    setExtraFields(tempExtraFields);\n    formContext.searchForm.intermediateCities.delete(extraFieldId);\n  };\n  const validateFields = () => {\n    let hasError = false;\n    if (/\\d/.test(formContext.searchForm.origin) || !formContext.searchForm.origin) {\n      hasError = true;\n      formContext.setSearchForm({\n        ...formContext.searchForm,\n        originErrorMessage: 'Select a city name from the list.'\n      });\n    }\n    if (/\\d/.test(formContext.searchForm.destination) || !formContext.searchForm.destination) {\n      hasError = true;\n      formContext.setSearchForm({\n        ...formContext.searchForm,\n        destinationErrorMessage: 'Select a city name from the list.'\n      });\n    }\n    if (!formContext.searchForm.date || !isFuture(new Date(formContext.searchForm.date))) {\n      hasError = true;\n      formContext.setSearchForm({\n        ...formContext.searchForm,\n        dateErrorMessage: 'Select a date in the future.'\n      });\n    }\n    if (!formContext.searchForm.passengers || formContext.searchForm.passengers < 1) {\n      hasError = true;\n      formContext.setSearchForm({\n        ...formContext.searchForm,\n        passengersErrorMessage: 'Inform the quantity of people.'\n      });\n    }\n    formContext.searchForm.intermediateCities.forEach((city, key) => {\n      if (!city.value || /\\d/.test(city.value)) {\n        const newIntermediateCities = formContext.searchForm.intermediateCities.set(key, {\n          value: city.value,\n          errorMessage: 'Select a city name from the list.'\n        });\n        formContext.setSearchForm({\n          ...formContext.searchForm,\n          intermediateCities: newIntermediateCities\n        });\n      }\n    });\n    if (hasError) setCanSubmitForm(false);\n    return hasError;\n  };\n  const handleFormSubmit = () => {\n    if (!validateFields()) {\n      var _formContext$searchFo;\n      let intermediateCitiesSearch = '';\n      (_formContext$searchFo = formContext.searchForm.intermediateCities) === null || _formContext$searchFo === void 0 ? void 0 : _formContext$searchFo.forEach(city => {\n        intermediateCitiesSearch += `&intermediateCities=${city.value}`;\n      });\n      navigate({\n        pathname: '/results',\n        search: `?origin=${formContext.searchForm.origin}&destination=${formContext.searchForm.destination}&date=${formContext.searchForm.date && format(new Date(formContext.searchForm.date), 'yyyy-MM-dd')}&passengers=${formContext.searchForm.passengers}${intermediateCitiesSearch}`\n      });\n    }\n  };\n  const setContextFromURL = () => {\n    var _queryParams$query$or, _queryParams$query$de, _queryParams$query$da;\n    const intermediateCitiesSearch = queryParams.query.intermediateCities;\n    let intermediateCities = [];\n    if (intermediateCitiesSearch !== null && intermediateCitiesSearch !== void 0 && intermediateCitiesSearch.length) {\n      intermediateCities = JSON.stringify(intermediateCitiesSearch).replace(/[\\[\\]\\\"']+/g, '').split(',');\n    }\n    const newIntermediateCitiesSet = new Map();\n    for (let idx = 0; idx < intermediateCities.length; idx++) {\n      setExtraFields([...extraFields, extraFieldLastId]);\n      newIntermediateCitiesSet.set(idx, {\n        value: intermediateCities[idx],\n        errorMessage: ''\n      });\n      setExtraFieldLastId(id => ++id);\n    }\n    formContext.setSearchForm({\n      ...formContext.searchForm,\n      origin: ((_queryParams$query$or = queryParams.query.origin) === null || _queryParams$query$or === void 0 ? void 0 : _queryParams$query$or.toString()) || '',\n      destination: ((_queryParams$query$de = queryParams.query.destination) === null || _queryParams$query$de === void 0 ? void 0 : _queryParams$query$de.toString()) || '',\n      date: ((_queryParams$query$da = queryParams.query.date) === null || _queryParams$query$da === void 0 ? void 0 : _queryParams$query$da.toString()) || '',\n      passengers: Number(queryParams.query.passengers) || 0,\n      intermediateCities: newIntermediateCitiesSet\n    });\n  };\n  React.useEffect(() => {\n    setContextFromURL();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(SectionSearch, {\n    children: /*#__PURE__*/_jsxDEV(CardContainer, {\n      children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n        children: /*#__PURE__*/_jsxDEV(CardTitle, {\n          children: \"Trip\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n        children: /*#__PURE__*/_jsxDEV(CardForm, {\n          children: [/*#__PURE__*/_jsxDEV(CardFormInputs, {\n            children: [/*#__PURE__*/_jsxDEV(InputForm, {\n              type: \"text\",\n              name: \"origin\",\n              label: \"City of origin\",\n              icon: /*#__PURE__*/_jsxDEV(FaMapMarkerAlt, {\n                size: 24\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 232,\n                columnNumber: 23\n              }, this),\n              value: formContext.searchForm.origin,\n              onChangeFunc: e => handleFormDataChange({\n                keyForm: 'origin',\n                value: e.target.value\n              }),\n              dropdownType: \"cities\",\n              errorMessage: formContext.searchForm.originErrorMessage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(InputForm, {\n              type: \"text\",\n              name: \"destination\",\n              label: \"City of destination\",\n              icon: /*#__PURE__*/_jsxDEV(FaMapMarkerAlt, {\n                size: 24\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 248,\n                columnNumber: 23\n              }, this),\n              value: formContext.searchForm.destination,\n              onChangeFunc: e => handleFormDataChange({\n                keyForm: 'destination',\n                value: e.target.value\n              }),\n              dropdownType: \"cities\",\n              errorMessage: formContext.searchForm.destinationErrorMessage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(InputForm, {\n              type: \"text\",\n              name: \"date\",\n              label: \"Date of the trip\",\n              icon: /*#__PURE__*/_jsxDEV(FaCalendarDay, {\n                size: 24\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 264,\n                columnNumber: 23\n              }, this),\n              value: formContext.searchForm.date && format(new Date(formContext.searchForm.date), 'yyyy-MM-dd'),\n              onChangeFunc: e => handleFormDataChange({\n                keyForm: 'date',\n                value: e.target.value\n              }),\n              dropdownType: \"date\",\n              errorMessage: formContext.searchForm.dateErrorMessage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(InputForm, {\n              type: \"number\",\n              name: \"passengers\",\n              label: \"Number of passengers\",\n              icon: /*#__PURE__*/_jsxDEV(FaMale, {\n                size: 24\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 283,\n                columnNumber: 23\n              }, this),\n              value: formContext.searchForm.passengers,\n              onChangeFunc: e => handleFormDataChange({\n                keyForm: 'passengers',\n                value: e.target.value\n              }),\n              errorMessage: formContext.searchForm.passengersErrorMessage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MoreInputContainer, {\n            children: extraFields.map(field => {\n              var _formContext$searchFo2, _formContext$searchFo3;\n              return /*#__PURE__*/_jsxDEV(IntermediateCityContainer, {\n                children: [/*#__PURE__*/_jsxDEV(InputForm, {\n                  type: \"text\",\n                  name: `intermediateCities-${field}`,\n                  label: \"Intermediate city\",\n                  icon: /*#__PURE__*/_jsxDEV(FaMapMarkerAlt, {\n                    size: 24\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 302,\n                    columnNumber: 27\n                  }, this),\n                  value: (_formContext$searchFo2 = formContext.searchForm.intermediateCities.get(field)) === null || _formContext$searchFo2 === void 0 ? void 0 : _formContext$searchFo2.value,\n                  onChangeFunc: e => handleFormDataChange({\n                    keyForm: 'intermediateCities',\n                    extraFieldId: field,\n                    value: e.target.value\n                  }),\n                  dropdownType: \"cities\",\n                  errorMessage: ((_formContext$searchFo3 = formContext.searchForm.intermediateCities.get(field)) === null || _formContext$searchFo3 === void 0 ? void 0 : _formContext$searchFo3.errorMessage) || ''\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 298,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(RemoveButton, {\n                  type: \"button\",\n                  onClick: () => handleRemoveExtraField(field),\n                  children: /*#__PURE__*/_jsxDEV(FaTrash, {\n                    size: 18\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 325,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 321,\n                  columnNumber: 19\n                }, this)]\n              }, field, true, {\n                fileName: _jsxFileName,\n                lineNumber: 297,\n                columnNumber: 17\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(AddButtonContainer, {\n            children: /*#__PURE__*/_jsxDEV(AddButton, {\n              type: \"button\",\n              onClick: handleAddNewFormField,\n              children: [/*#__PURE__*/_jsxDEV(FaPlus, {\n                size: 12\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 333,\n                columnNumber: 17\n              }, this), \"Add intermediate city\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 332,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(SearchButton, {\n            type: \"button\",\n            disabled: !canSubmitForm,\n            onClick: handleFormSubmit,\n            children: \"Search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 337,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 220,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"Jz6ryKFKxOpWaRRYey7gzUhOUGI=\", false, function () {\n  return [useNavigate];\n});\n_c = Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","FaMapMarkerAlt","FaCalendarDay","FaMale","FaPlus","FaTrash","format","isFuture","parseUrl","InputForm","SearchFormContext","AddButton","AddButtonContainer","CardBody","CardContainer","CardForm","CardFormInputs","CardHeader","CardTitle","IntermediateCityContainer","MoreInputContainer","RemoveButton","SearchButton","SectionSearch","useNavigate","Home","extraFields","setExtraFields","useState","extraFieldLastId","setExtraFieldLastId","canSubmitForm","setCanSubmitForm","formContext","useContext","queryParams","window","location","search","navigate","handleAddNewFormField","newIntermediateCities","searchForm","intermediateCities","set","value","errorMessage","setSearchForm","id","handleFormDataChange","keyForm","extraFieldId","handleRemoveExtraField","tempExtraFields","splice","indexOf","delete","validateFields","hasError","test","origin","originErrorMessage","destination","destinationErrorMessage","date","Date","dateErrorMessage","passengers","passengersErrorMessage","forEach","city","key","handleFormSubmit","intermediateCitiesSearch","pathname","setContextFromURL","query","length","JSON","stringify","replace","split","newIntermediateCitiesSet","Map","idx","toString","Number","useEffect","e","target","map","field","get"],"sources":["/Users/luiseduardo/Documents/repositories/my-github/miles-calculator/client/src/pages/home/index.tsx"],"sourcesContent":["import React from 'react'\nimport {\n  FaMapMarkerAlt,\n  FaCalendarDay,\n  FaMale,\n  FaPlus,\n  FaTrash,\n} from 'react-icons/fa'\nimport { format, isFuture } from 'date-fns'\nimport { parseUrl } from 'query-string'\n\nimport { InputForm } from '../../components/inputForm'\nimport { IIntermediateCity, SearchFormContext } from '../../contexts/home'\nimport {\n  AddButton,\n  AddButtonContainer,\n  CardBody,\n  CardContainer,\n  CardForm,\n  CardFormInputs,\n  CardHeader,\n  CardTitle,\n  IntermediateCityContainer,\n  MoreInputContainer,\n  RemoveButton,\n  SearchButton,\n  SectionSearch,\n} from './styles'\nimport { useNavigate } from 'react-router-dom'\n\nexport const Home: React.FC = () => {\n  const [extraFields, setExtraFields] = React.useState<Array<number>>([])\n  const [extraFieldLastId, setExtraFieldLastId] = React.useState<number>(1)\n  const [canSubmitForm, setCanSubmitForm] = React.useState<boolean>(true)\n\n  const formContext = React.useContext(SearchFormContext)\n\n  const queryParams = parseUrl(window.location.search)\n  const navigate = useNavigate()\n\n  const handleAddNewFormField = (): void => {\n    setExtraFields([...extraFields, extraFieldLastId])\n\n    const newIntermediateCities =\n      formContext?.searchForm.intermediateCities.set(extraFieldLastId, {\n        value: '',\n        errorMessage: '',\n      })\n\n    formContext?.setSearchForm({\n      ...formContext.searchForm,\n      intermediateCities: newIntermediateCities,\n    })\n    setExtraFieldLastId((id) => ++id)\n  }\n\n  const handleFormDataChange = ({\n    keyForm,\n    extraFieldId,\n    value,\n  }: {\n    keyForm: string\n    extraFieldId?: number\n    value: string\n  }): void => {\n    setCanSubmitForm(true)\n    if (keyForm !== 'intermediateCities') {\n      formContext.setSearchForm({\n        ...formContext.searchForm,\n        [keyForm]: value,\n        [keyForm + 'ErrorMessage']: '',\n      })\n    } else if (extraFieldId) {\n      const newIntermediateCities =\n        formContext.searchForm.intermediateCities.set(extraFieldId, {\n          value: value,\n          errorMessage: '',\n        })\n      formContext.setSearchForm({\n        ...formContext.searchForm,\n        intermediateCities: newIntermediateCities,\n      })\n    }\n  }\n\n  const handleRemoveExtraField = (extraFieldId: number) => {\n    const tempExtraFields = [...extraFields]\n    tempExtraFields.splice(extraFields.indexOf(extraFieldId), 1)\n    setExtraFields(tempExtraFields)\n\n    formContext.searchForm.intermediateCities.delete(extraFieldId)\n  }\n\n  const validateFields = (): boolean => {\n    let hasError = false\n\n    if (\n      /\\d/.test(formContext.searchForm.origin) ||\n      !formContext.searchForm.origin\n    ) {\n      hasError = true\n\n      formContext.setSearchForm({\n        ...formContext.searchForm,\n        originErrorMessage: 'Select a city name from the list.',\n      })\n    }\n\n    if (\n      /\\d/.test(formContext.searchForm.destination) ||\n      !formContext.searchForm.destination\n    ) {\n      hasError = true\n\n      formContext.setSearchForm({\n        ...formContext.searchForm,\n        destinationErrorMessage: 'Select a city name from the list.',\n      })\n    }\n\n    if (\n      !formContext.searchForm.date ||\n      !isFuture(new Date(formContext.searchForm.date))\n    ) {\n      hasError = true\n\n      formContext.setSearchForm({\n        ...formContext.searchForm,\n        dateErrorMessage: 'Select a date in the future.',\n      })\n    }\n\n    if (\n      !formContext.searchForm.passengers ||\n      formContext.searchForm.passengers < 1\n    ) {\n      hasError = true\n\n      formContext.setSearchForm({\n        ...formContext.searchForm,\n        passengersErrorMessage: 'Inform the quantity of people.',\n      })\n    }\n\n    formContext.searchForm.intermediateCities.forEach((city, key) => {\n      if (!city.value || /\\d/.test(city.value)) {\n        const newIntermediateCities =\n          formContext.searchForm.intermediateCities.set(key, {\n            value: city.value,\n            errorMessage: 'Select a city name from the list.',\n          })\n        formContext.setSearchForm({\n          ...formContext.searchForm,\n          intermediateCities: newIntermediateCities,\n        })\n      }\n    })\n\n    if (hasError) setCanSubmitForm(false)\n    return hasError\n  }\n\n  const handleFormSubmit = () => {\n    if (!validateFields()) {\n      let intermediateCitiesSearch = ''\n      formContext.searchForm.intermediateCities?.forEach((city) => {\n        intermediateCitiesSearch += `&intermediateCities=${city.value}`\n      })\n\n      navigate({\n        pathname: '/results',\n        search: `?origin=${formContext.searchForm.origin}&destination=${\n          formContext.searchForm.destination\n        }&date=${\n          formContext.searchForm.date &&\n          format(new Date(formContext.searchForm.date), 'yyyy-MM-dd')\n        }&passengers=${\n          formContext.searchForm.passengers\n        }${intermediateCitiesSearch}`,\n      })\n    }\n  }\n\n  const setContextFromURL = () => {\n    const intermediateCitiesSearch = queryParams.query.intermediateCities\n\n    let intermediateCities: Array<string> = []\n    if (intermediateCitiesSearch?.length) {\n      intermediateCities = JSON.stringify(intermediateCitiesSearch)\n        .replace(/[\\[\\]\\\"']+/g, '')\n        .split(',')\n    }\n\n    const newIntermediateCitiesSet: Map<number, IIntermediateCity> = new Map()\n    for (let idx = 0; idx < intermediateCities.length; idx++) {\n      setExtraFields([...extraFields, extraFieldLastId])\n      newIntermediateCitiesSet.set(idx, {\n        value: intermediateCities[idx],\n        errorMessage: '',\n      })\n\n      setExtraFieldLastId((id) => ++id)\n    }\n\n    formContext.setSearchForm({\n      ...formContext.searchForm,\n      origin: queryParams.query.origin?.toString() || '',\n      destination: queryParams.query.destination?.toString() || '',\n      date: queryParams.query.date?.toString() || '',\n      passengers: Number(queryParams.query.passengers) || 0,\n      intermediateCities: newIntermediateCitiesSet,\n    })\n  }\n\n  React.useEffect(() => {\n    setContextFromURL()\n  }, [])\n\n  return (\n    <SectionSearch>\n      <CardContainer>\n        <CardHeader>\n          <CardTitle>Trip</CardTitle>\n        </CardHeader>\n        <CardBody>\n          <CardForm>\n            <CardFormInputs>\n              <InputForm\n                type='text'\n                name='origin'\n                label='City of origin'\n                icon={<FaMapMarkerAlt size={24} />}\n                value={formContext.searchForm.origin}\n                onChangeFunc={(e: React.ChangeEvent<HTMLInputElement>) =>\n                  handleFormDataChange({\n                    keyForm: 'origin',\n                    value: e.target.value,\n                  })\n                }\n                dropdownType='cities'\n                errorMessage={formContext.searchForm.originErrorMessage}\n              />\n\n              <InputForm\n                type='text'\n                name='destination'\n                label='City of destination'\n                icon={<FaMapMarkerAlt size={24} />}\n                value={formContext.searchForm.destination}\n                onChangeFunc={(e: React.ChangeEvent<HTMLInputElement>) =>\n                  handleFormDataChange({\n                    keyForm: 'destination',\n                    value: e.target.value,\n                  })\n                }\n                dropdownType='cities'\n                errorMessage={formContext.searchForm.destinationErrorMessage}\n              />\n\n              <InputForm\n                type='text'\n                name='date'\n                label='Date of the trip'\n                icon={<FaCalendarDay size={24} />}\n                value={\n                  formContext.searchForm.date &&\n                  format(new Date(formContext.searchForm.date), 'yyyy-MM-dd')\n                }\n                onChangeFunc={(e: React.ChangeEvent<HTMLInputElement>) =>\n                  handleFormDataChange({\n                    keyForm: 'date',\n                    value: e.target.value,\n                  })\n                }\n                dropdownType='date'\n                errorMessage={formContext.searchForm.dateErrorMessage}\n              />\n\n              <InputForm\n                type='number'\n                name='passengers'\n                label='Number of passengers'\n                icon={<FaMale size={24} />}\n                value={formContext.searchForm.passengers}\n                onChangeFunc={(e: React.ChangeEvent<HTMLInputElement>) =>\n                  handleFormDataChange({\n                    keyForm: 'passengers',\n                    value: e.target.value,\n                  })\n                }\n                errorMessage={formContext.searchForm.passengersErrorMessage}\n              />\n            </CardFormInputs>\n\n            <MoreInputContainer>\n              {extraFields.map((field) => (\n                <IntermediateCityContainer key={field}>\n                  <InputForm\n                    type='text'\n                    name={`intermediateCities-${field}`}\n                    label='Intermediate city'\n                    icon={<FaMapMarkerAlt size={24} />}\n                    value={\n                      formContext.searchForm.intermediateCities.get(field)\n                        ?.value\n                    }\n                    onChangeFunc={(e: React.ChangeEvent<HTMLInputElement>) =>\n                      handleFormDataChange({\n                        keyForm: 'intermediateCities',\n                        extraFieldId: field,\n                        value: e.target.value,\n                      })\n                    }\n                    dropdownType='cities'\n                    errorMessage={\n                      formContext.searchForm.intermediateCities.get(field)\n                        ?.errorMessage || ''\n                    }\n                  />\n\n                  <RemoveButton\n                    type='button'\n                    onClick={() => handleRemoveExtraField(field)}\n                  >\n                    <FaTrash size={18} />\n                  </RemoveButton>\n                </IntermediateCityContainer>\n              ))}\n            </MoreInputContainer>\n\n            <AddButtonContainer>\n              <AddButton type='button' onClick={handleAddNewFormField}>\n                <FaPlus size={12} />\n                Add intermediate city\n              </AddButton>\n            </AddButtonContainer>\n            <SearchButton\n              type='button'\n              disabled={!canSubmitForm}\n              onClick={handleFormSubmit}\n            >\n              Search\n            </SearchButton>\n          </CardForm>\n        </CardBody>\n      </CardContainer>\n    </SectionSearch>\n  )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}