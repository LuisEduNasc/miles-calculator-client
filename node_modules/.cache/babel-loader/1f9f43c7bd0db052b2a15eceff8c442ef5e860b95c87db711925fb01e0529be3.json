{"ast":null,"code":"import axios from 'axios';\nconst sleep = ms => {\n  return new Promise(resolve => {\n    setTimeout(resolve, ms);\n  });\n};\nexport const fetchCities = async search => {\n  const response = await axios({\n    url: `${process.env.REACT_APP_URL_CITIES}/api/v1/cities/?q=${search}`,\n    method: 'get'\n  }).then(await sleep(1500));\n  return response.data;\n};\nexport const getKilometers = async search => {\n  const response = await axios({\n    url: `${process.env.REACT_APP_URL_CITIES}/api/v1/kilometers/?q=${search}`,\n    method: 'get',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    }\n  }).then(await sleep(1500));\n  return response.data;\n};","map":{"version":3,"names":["axios","sleep","ms","Promise","resolve","setTimeout","fetchCities","search","response","url","process","env","REACT_APP_URL_CITIES","method","then","data","getKilometers","headers"],"sources":["/Users/luiseduardo/Documents/repositories/my-github/miles-calculator/client/src/api/cities.ts"],"sourcesContent":["import axios from 'axios'\n\nexport interface ICitiesResponse {\n  cities: Array<[string, number, number]>\n}\n\nexport interface IKilometersResponse {\n  id: number;\n  origin: string;\n  destiny: string;\n  kilometers: string;\n}\n\nconst sleep = (ms: number): Promise<any> => {\n  return new Promise((resolve) => {setTimeout(resolve, ms)})\n}\n\nexport const fetchCities = async (search: string): Promise<ICitiesResponse> => {\n  const response = await axios({\n    url: `${process.env.REACT_APP_URL_CITIES}/api/v1/cities/?q=${search}`,\n    method: 'get',\n  }).then(await sleep(1500))\n\n  return response.data as ICitiesResponse\n}\n\nexport const getKilometers = async (search: Array<string>): Promise<IKilometersResponse[]> => {\n  const response = await axios({\n    url: `${process.env.REACT_APP_URL_CITIES}/api/v1/kilometers/?q=${search}`,\n    method: 'get',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json',\n    },\n  }).then(await sleep(1500))\n\n  return response.data as IKilometersResponse[]\n}"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAazB,MAAMC,KAAK,GAAIC,EAAU,IAAmB;EAC1C,OAAO,IAAIC,OAAO,CAAEC,OAAO,IAAK;IAACC,UAAU,CAACD,OAAO,EAAEF,EAAE,CAAC;EAAA,CAAC,CAAC;AAC5D,CAAC;AAED,OAAO,MAAMI,WAAW,GAAG,MAAOC,MAAc,IAA+B;EAC7E,MAAMC,QAAQ,GAAG,MAAMR,KAAK,CAAC;IAC3BS,GAAG,EAAG,GAAEC,OAAO,CAACC,GAAG,CAACC,oBAAqB,qBAAoBL,MAAO,EAAC;IACrEM,MAAM,EAAE;EACV,CAAC,CAAC,CAACC,IAAI,CAAC,MAAMb,KAAK,CAAC,IAAI,CAAC,CAAC;EAE1B,OAAOO,QAAQ,CAACO,IAAI;AACtB,CAAC;AAED,OAAO,MAAMC,aAAa,GAAG,MAAOT,MAAqB,IAAqC;EAC5F,MAAMC,QAAQ,GAAG,MAAMR,KAAK,CAAC;IAC3BS,GAAG,EAAG,GAAEC,OAAO,CAACC,GAAG,CAACC,oBAAqB,yBAAwBL,MAAO,EAAC;IACzEM,MAAM,EAAE,KAAK;IACbI,OAAO,EAAE;MACP,QAAQ,EAAE,kBAAkB;MAC5B,cAAc,EAAE;IAClB;EACF,CAAC,CAAC,CAACH,IAAI,CAAC,MAAMb,KAAK,CAAC,IAAI,CAAC,CAAC;EAE1B,OAAOO,QAAQ,CAACO,IAAI;AACtB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}